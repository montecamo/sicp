; This file is a utility for debugging Stkdb, and is not otherwise used.

(define (match? patn targ)
  (cond ((eqv? patn '??) #t)
	((and (pair? patn) (eqv? (car patn) '?@))
	 (or (match? (cdr patn) targ)
	     (and (pair? targ) (match? patn (cdr targ)))))
	((and (pair? patn) (pair? targ))
	 (and (match? (car patn) (car targ)) (match? (cdr patn) (cdr targ))))
	(else (equal? patn targ))))

(define (uninst1 expr)
  (cond ((match? '(let ((stkdb:sp (stkdb:push)) (stkdb:posn #f))
		   ?@)
		expr)
	 `(begin ,@(uninst1 (cddr expr))))
	((match? '(let ((stkdb:posn ??))
		   (stkdb:bpchk stkdb:sp ??)
		   ??)
		expr)
	 (uninst1 (cadddr expr)))
	((match? '(stkdb:id ??) expr)
	 (uninst1 (cadr expr)))
	((match? '(stkdb:retchk ?? ?? ??) expr)
	 (uninst1 (cadddr expr)))
	((pair? expr)
	 (map uninst1 expr))
	(else expr)))

(define (clean-begin expr)
  (cond ((match? '(lambda ?? (begin ?@)) expr)
	 `(lambda ,(cadr expr) ,@(map clean-begin (cdr (caddr expr)))))
	((match? '(let ?? (begin ?@)) expr)
	 `(let ,(clean-begin (cadr expr)) ,@(map clean-begin (cdr (caddr expr)))))
	((pair? expr) (cons (clean-begin (car expr)) (clean-begin (cdr expr))))
	(else expr)))

(define (uninstrument expr)
  (clean-begin (uninst1 expr)))

(define (remove-file arg) 
  (format (current-error-port) "Temp file: ~a~%" arg))
